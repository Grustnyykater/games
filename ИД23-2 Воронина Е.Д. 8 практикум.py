# 1 Используя список l1, создать список, в котором каждый элемент списка l1 будет заменен
# значением длины строки соответствующего элемента в списке l1.
# Использовать генераторы, решить задачу в одну строку.
l1 = ['1', '123', '123', '12', '1', '123']
l2 = [len(el) for el in l1]
l2

# 2 Подсчитать количество строк в списке l1, длина которых больше 2х. Использовать
# генераторы, решить задачу в одну строку.
l1 = ['1', '123', '123', '12', '1', '123']
l2 = [el for el in l1 if len(el) > 2]
len(l2)

# 3 Создать список, в котором все числа списка l2 умножены на их номер в списке.
# Использовать генераторы, решить задачу в одну строку.
l2 = [2, 4, -2, -3, 0 , 11 , 3, -1]
ans = [(ind + 1) * el for ind, el in enumerate(l2)]
ans

# 4 Создать список, в котором все отрицательные числа списка l2 исключены, остальные
# элементы сохранены на своих местах. Использовать генераторы, решить задачу
# в одну строку.
l2 = [2, 4, -2, -3, 0 , 11 , 3, -1]
ans = [el for el in l2 if el > -1]
ans

# 5 Создать список, в котором все отрицательные числа списка l2 заменены на их номер в
# списке, остальные элементы сохранены на своих местах. Использовать генераторы и
# тернарный оператор, решить задачу в одну строку.
l2 = [2, 4, -2, -3, 0 , 11 , 3, -1]
m = [ind + 1 if el < 0 else el for ind, el in enumerate(l2)]
m

# 6 На основе переданной строки (не содержащей повторяющихся символов) создать словарь,
# в котором каждому символу строки будет соответствовать номер символа в строке.
# Использовать генераторы, решить задачу в одну строку. Пример: строка 'abcdef',
# словарь {'a': 1, 'b': 2, 'c': 3, 'd': 4}
inp = input()
ans = dict([(el, ind + 1) for ind, el in enumerate(inp)])
ans

# 7 Определить, сколько элементов заданного списка содержится в словаре. Использовать
# генераторы, решить задачу в одну строку. Пример: определить сколько элементов списка l1
# содержится в словаре d1. (ответ: 2)
elements = len([x for x in ['1', '123', '123', '12', '1', '123'] if int(x) in {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}])
print(elements)

# 8 Для строки evgene_o создать словарь, где для всех символов, встречающихся в строке,
# хранится число: сколько раз символ встретился в строке evgene_o. Использовать генераторы,
# решить задачу в одну строку
from collections import Counter
str1 = "evgene_o"
char_count = Counter(str1)
print(char_count)

# 9 Используя словарь, полученный в предыдущей задаче, подсчитать количество строчных
# букв в строке evgene_o. Использовать генераторы, решить задачу в одну строку.
str1 = "evgene_o"
x = len(str1.lower())
print(x)

# 10 Метод items() возвращает пары ключ-значение словаря в формате объектов кортежей.
# Использовать генераторы, решить задачу в одну строку.
# Метод items() возвращает пары ключ-значение словаря в формате объектов кортежей.
dict = {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}
answer = sum(key * value for key, value in dict.items())
print(answer)

# 11 На базе словаря d6 создать словарь d7, в котором нет пар ключ-значение с ключами,
# встречающимися в словаре d5. Использовать генераторы, решить задачу в одну строку.
d6 = {'e': 20, 'f': 21, 'g': 22, 'h': 23, 'i': 24, 'j': 25, 'k': 26, 'l': 27}
d5 = {'a': 3, 'b': 4, 'c': 5, 'd': 6, 'e': 7, 'f': 8, 'g': 9}
d7 = {key: value for key, value in d6.items() if key not in d5}
print(d7)